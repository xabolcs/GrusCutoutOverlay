#!/sbin/sh

OUTFD=${2}
ZIPFILE=${3}

umask 022

ui_print() {
    printf "ui_print %s\nui_print\n" "${*}" > /proc/self/fd/"${OUTFD}"
}

if [ -f /sbin/recovery ] || [ -f /system/bin/recovery ]; then
    # Installing via recovery. Always do a direct install.
    set -exu

    root_dir=""
    target_dir=""
    for p in product system; do
        ui_print "Finding ${p} partition ..."
        if grep /${p} /proc/mounts; then
            root_dir=$(grep /${p} /proc/mounts|cut -d" " -f2)
            mount -o remount,rw $root_dir
        elif grep /${p} /etc/fstab; then
            root_dir=$(mktemp -d -p /tmp)
            p_part=$(grep /${p} /etc/fstab|cut -d" " -f1)
            p_fs=$(grep /${p} /etc/fstab|cut -d" " -f3)
            mount -t $p_fs $p_part $root_dir
        elif [ -d /dev/block/mapper ] && [ -e /dev/block/mapper/${p} ]; then
            ui_print 'Device with dynamic partitions found'
            root_dir=$(mktemp -d -p /tmp)
            mount -o rw -t auto /dev/block/mapper/${p} $root_dir
        elif [ -d /dev/block/bootdevice/by-name ] && [ -e /dev/block/bootdevice/by-name/${p} ]; then
            root_dir=$(mktemp -d -p /tmp)
            mount -o rw -t auto /dev/block/bootdevice/by-name/${p} $root_dir
        else
          ui_print "${p} partition not found!"
        fi
        if [ -n "$root_dir" ]; then
            ui_print "Found ${p} at $root_dir"
            target_dir=$root_dir
            [ ${p} = "system" ] && target_dir=${target_dir}/system/product
            break
        fi
    done

    [ -z "$root_dir" ] && exit 1

    ui_print 'Extracting files'

    # Just overwriting isn't sufficient because the apk filenames are different
    # between debug and release builds
    filename=$(unzip -p "${ZIPFILE}" module.prop | grep '^fileName=' | cut -d= -f2)

    # rm on some custom recoveries doesn't exit with 0 on ENOENT, even with -f
    rm -rfv "${target_dir}/overlay/${filename}/${filename}.apk" || :

    extract_dir=$(mktemp -d -p /tmp)
    unzip -o "${ZIPFILE}" 'system/*' -d "${extract_dir}"
    mv -v ${extract_dir}/system/product/overlay/* ${target_dir}/overlay

    ui_print 'Cleaning up!'
    rm -rfv ${extract_dir}

    if test $(dirname $root_dir) = "/tmp"; then
        ui_print 'Unmounting manually mounted partition'
        umount $root_dir
        rmdir $root_dir
    fi

    ui_print 'Done!'
else
    # Installing via Magisk Manager.

    . /data/adb/magisk/util_functions.sh

    has_overlays() {
        local mnt="${1}" count
        count=$(awk -v mnt="${mnt}" '$9 == "overlay" && $5 ~ mnt' /proc/self/mountinfo | wc -l)
        [ "${count}" -gt 0 ]
    }

    # https://github.com/topjohnwu/Magisk/pull/6588
    if [ -n "${MAGISK_VER_CODE}" ]; then
        ui_print "Magisk version: ${MAGISK_VER_CODE}"
        if has_overlays /system && [ "${MAGISK_VER_CODE}" -lt 26000 ]; then
            ui_print "Magisk v26.0 (26000) or newer is required because this device uses overlayfs"
            exit 1
        fi
    fi

    install_module
fi
